version: "3.9"

networks:
  dbf-network:
    driver: bridge
    name: dbf-network

volumes:
  dbf_data:
    name: dbf_data

services:
  dbf_db:
    image: postgres:latest
    container_name: dbf_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGDATA=${PGDATA}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - type: volume
        source: dbf_data
        target: /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 5s
      retries: 5
    networks:
      - dbf-network
  dbf_backend:
    container_name: dbf_api
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        - API_PORT=${API_PORT}
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - .:/app
    command: bash -c "goose -dir database/migrations ${DB_DRIVER} ${CONNECTION_STRING} up && air -c .air.toml"
    networks:
      - dbf-network

